#note: largely following xdem example
# left 'files: ' blank, wasn't sure how to specify yet
repos:
    - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
          - id: check-yaml
          - id: end-of-file-fixer
          - id: trailing-whitespace
          - id: check-merge-conflict
  #fix common spelling mistakes
   - repo: https://github.com/codespell-project/codespell
    rev: v2.2.1
    hooks:
        - id: codespell
          args: ["--check-filenames"]
          types_or: [python, yaml, markdown]
  # replace relative imports
  - repo: https://github.com/MaroGorelli/absolufy-imports
    rev: v0.3.1
    hooks:
        - id: absolufy-imports
  # format code using black
  - repo: https://github.com/psf/black
    rev: 22.10.0
    hooks:
        -id: black
         args: [--line-length=120]
  # lint code using flake8
  - repo: https://github.com/pycqa/flake8
    rev: 3.9.2
    hooks:
        - id: flake8
        # More than one argument in the second list, so need to pass arguments as below (and -- to finish)
                  args: [
                          '--max-line-length', '120',  # we can write dicts however we want
                          '--extend-ignore', 'E203,C408', # flake8 disagrees with black, so this should be ignored.
                          '--'
                  ]
                  additional_dependencies:
                          - flake8-comprehensions==3.1.0
                          - flake8-bugbear==21.3.2
  # Sort imports using isort
        - repo: https://github.com/PyCQA/isort
          rev: 5.12.0
          hooks:
                  - id: isort
                    args: ["--profile", "black"]

        # Automatically upgrade syntax to a minimum version
        - repo: https://github.com/asottile/pyupgrade
          rev: v3.1.0
          hooks:
                - id: pyupgrade
                  args: [--py37-plus]

        # Various formattings
        - repo: https://github.com/pre-commit/pygrep-hooks
          rev: v1.9.0
          hooks:
                # Single backticks should apparently not be used
                - id: rst-backticks
                # Check that all directives end with double colon
                - id: rst-directive-colons
                  types: [text]
                  types_or: [python, rst]
                # Inline code should not touch normal text
                - id: rst-inline-touching-normal
                  types: [text]
                  types_or: [python, rst]
                # Eval should never be used (can do arbitrary code execution)
                - id: python-no-eval
                # Enforce the use of type annotations instead of docstring type comments
                - id: python-use-type-annotations

        # Add custom regex lints (see .relint.yml)
        - repo: https://github.com/codingjoe/relint
          rev: 2.0.0
          hooks:
                - id: relint
        - repo: local
          hooks:
                # Generate pip's requirements.txt from conda's environment.yml to ensure consistency
                - id: pip-to-conda
                  name: Generate pip dependency from conda
                  language: python
                  entry: .github/scripts/generate_pip_deps_from_conda.py
                  files: ^(environment.yml|requirements.txt)$
                  pass_filenames: false
                  additional_dependencies: [tomli, pyyaml]